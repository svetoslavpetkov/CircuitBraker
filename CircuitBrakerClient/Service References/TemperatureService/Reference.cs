//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CircuitBrakerClient.TemperatureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TemperatureService.ITemperatureService")]
    public interface ITemperatureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperatureService/GetTemperature", ReplyAction="http://tempuri.org/ITemperatureService/GetTemperatureResponse")]
        int GetTemperature();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITemperatureService/GetTemperature", ReplyAction="http://tempuri.org/ITemperatureService/GetTemperatureResponse")]
        System.Threading.Tasks.Task<int> GetTemperatureAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITemperatureServiceChannel : CircuitBrakerClient.TemperatureService.ITemperatureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TemperatureServiceClient : System.ServiceModel.ClientBase<CircuitBrakerClient.TemperatureService.ITemperatureService>, CircuitBrakerClient.TemperatureService.ITemperatureService {
        
        public TemperatureServiceClient() {
        }
        
        public TemperatureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TemperatureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TemperatureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int GetTemperature() {
            return base.Channel.GetTemperature();
        }
        
        public System.Threading.Tasks.Task<int> GetTemperatureAsync() {
            return base.Channel.GetTemperatureAsync();
        }
    }
}
